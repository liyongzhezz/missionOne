(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{432:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"安装依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖"}},[t._v("#")]),t._v(" 安装依赖")]),t._v(" "),s("p",[t._v("执行下面的命令安装"),s("code",[t._v("python-kafka")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip3 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" kafka-python\n")])])]),s("h2",{attrs:{id:"消费kafka数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消费kafka数据"}},[t._v("#")]),t._v(" 消费kafka数据")]),t._v(" "),s("p",[t._v("示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python3.6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding: utf-8 -*-")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" kafka "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" KafkaConsumer\n\n\nconsumer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" KafkaConsumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_topic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         bootstrap_servers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.16.100.10:9092"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         group_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_consumer_group'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         auto_offset_reset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latest'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("如果kafka中保存的是字符串或者json格式的数据，那么拿到数据后直接进行处理即可。但是因为我的数据是protobuf格式的，所以还需要下面的步骤对数据进行序列化：")]),t._v(" "),s("h2",{attrs:{id:"处理protobuf格式数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理protobuf格式数据"}},[t._v("#")]),t._v(" 处理protobuf格式数据")]),t._v(" "),s("h3",{attrs:{id:"安装依赖-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖-2"}},[t._v("#")]),t._v(" 安装依赖")]),t._v(" "),s("p",[t._v("执行下面的命令安装protobuf:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("yum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc gcc-c++ libstdc++-devel "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" build\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protobuf-all-3.11.4.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxvf protobuf-3.11.4.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" protobuf-3.11.4\n./configure\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" check\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nprotoc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("\n")])])]),s("p",[t._v("执行下面的命令安装"),s("code",[t._v("protobuf_to_dict")]),t._v("，这个模块将pb格式数据转换为字典数据：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip3 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" protobuf3-to-dict\n")])])]),s("p",[t._v("因为我的使用的是protobuf3，所以这里安装的是对应版本的protobuf，安装这个包的目的是要用"),s("code",[t._v("protoc")]),t._v("命令，根据proto协议数据格式生成对应的python库文件。")]),t._v(" "),s("h3",{attrs:{id:"创建协议文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建协议文件"}},[t._v("#")]),t._v(" 创建协议文件")]),t._v(" "),s("p",[t._v("安装好后，我们需要创建一个协议文件，命名为"),s("code",[t._v("*.proto")]),t._v("，例如:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test.proto")]),t._v("\nsyntax "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proto3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmessage AgentMessage\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    enum ServerType\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tLINUX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n    \tWINDOWS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    int64 data_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n    string "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ip")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n    int32 mac "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\n    int32 kernel_version "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("根据这个文件，执行下面的命令，可以生成一个库文件，后面将用这个库文件解析"),s("code",[t._v("protobuf")]),t._v("格式数据：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("protoc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--python_out")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("./ ./test.proto\n")])])]),s("blockquote",[s("p",[t._v("生成的文件名为："),s("code",[t._v("test_pb2.py")])])]),t._v(" "),s("h3",{attrs:{id:"处理pb数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理pb数据"}},[t._v("#")]),t._v(" 处理pb数据")]),t._v(" "),s("p",[t._v("修改上面的消费kafka的数据代码：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python3.6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding: utf-8 -*-")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" kafka "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" KafkaConsumer\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" test_pb2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" AgentMessage\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" protobuf_to_dict "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" protobuf_to_dict\n\nagent_msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AgentStrMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\nconsumer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" KafkaConsumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_topic"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         bootstrap_servers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"172.16.100.10:9092"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         group_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_consumer_group'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                         auto_offset_reset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latest'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" msg "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    agent_msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ParseFromString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" protobuf_to_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("agent_msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("这里"),s("code",[t._v("msg")]),t._v("实际上是一个"),s("code",[t._v("ConsumerRecord")]),t._v("对象，其中的"),s("code",[t._v("msg.value")]),t._v("是实际消息体，"),s("code",[t._v("bytes")]),t._v("类型，其他的是一些如上报时间戳、offset等信息。")])]),t._v(" "),s("p",[t._v("这样就可以将"),s("code",[t._v("protobuf")]),t._v("的数据转换为字典类型的数据了。")])])}),[],!1,null,null,null);s.default=r.exports}}]);