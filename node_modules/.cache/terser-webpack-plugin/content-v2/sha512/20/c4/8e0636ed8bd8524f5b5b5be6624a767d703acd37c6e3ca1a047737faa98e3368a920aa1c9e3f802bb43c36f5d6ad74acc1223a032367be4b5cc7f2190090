{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{411:function(e,t,s){\"use strict\";s.r(t);var v=s(2),o=Object(v.a)({},(function(){var e=this,t=e._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h2\",{attrs:{id:\"网络模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#网络模式\"}},[e._v(\"#\")]),e._v(\" 网络模式\")]),e._v(\" \"),t(\"p\",[e._v(\"Docker具有四种网络模式：\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[t(\"code\",[e._v(\"host\")]),e._v(\"：使容器和宿主机共享网络命名空间；\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"container\")]),e._v(\"：使容器和其他指定的容器共享网络命名空间；\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"none\")]),e._v(\"：容器具有独立的网络命名空间，但是没有进行任何网络配置：如分配IP、网桥配置等；\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"bridge\")]),e._v(\"：默认模式；\")])]),e._v(\" \"),t(\"p\",[e._v(\"Docker的网络可以通过下面的命令查看，默认安装完成后提供了三种网络：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language-bash extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"docker\")]),e._v(\" network \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"ls\")]),e._v(\"\\n\\nNETWORK ID          NAME                DRIVER              SCOPE\\ncd97bb997b84        bridge              bridge              \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"local\")]),e._v(\"\\n0a04824fc9b6        \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"host\")]),e._v(\"                \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"host\")]),e._v(\"                \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"local\")]),e._v(\"\\n4dcb8fbdb599        none                null                \"),t(\"span\",{pre:!0,attrs:{class:\"token builtin class-name\"}},[e._v(\"local\")]),e._v(\"\\n\")])])]),t(\"h2\",{attrs:{id:\"bridge模式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bridge模式\"}},[e._v(\"#\")]),e._v(\" bridge模式\")]),e._v(\" \"),t(\"p\",[e._v(\"docker启动时会在机器上创建一个名为\"),t(\"code\",[e._v(\"docker0\")]),e._v(\"的虚拟网桥，在此机器上启动的容器都会默认连接到这个网桥上并由\"),t(\"code\",[e._v(\"docker0\")]),e._v(\"从其分子网中分配一个IP给容器使用，\"),t(\"code\",[e._v(\"docker0\")]),e._v(\"的IP将作为容器IP的网关；在主机上创建一对虚拟网卡\"),t(\"code\",[e._v(\"veth pair\")]),e._v(\"设备，Docker将\"),t(\"code\",[e._v(\"veth pair\")]),e._v(\"设备的一端放在新创建的容器中，并命名为\"),t(\"code\",[e._v(\"eth0\")]),e._v(\"（容器的网卡），另一端放在主机中，以\"),t(\"code\",[e._v(\"vethxxx\")]),e._v(\"这样类似的名字命名，并将这个网络设备加入到\"),t(\"code\",[e._v(\"docker0\")]),e._v(\"网桥中。可以通过\"),t(\"code\",[e._v(\"brctl show\")]),e._v(\" 命令查看。\")]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[t(\"code\",[e._v(\"docker0\")]),e._v(\"网桥的工作方式类似于物理交换机，这样所有的docker容器都通过\"),t(\"code\",[e._v(\"docker0\")]),e._v(\"这个虚拟的交换机连接在一个二层网络中\")])]),e._v(\" \"),t(\"p\",[e._v(\"bridge模式是docker的 \"),t(\"strong\",[e._v(\"默认网络模式\")]),e._v(\"，即启动容器时不用指定\"),t(\"code\",[e._v(\"--network\")]),e._v(\"参数。当容器需要使用\"),t(\"code\",[e._v(\"docker run -p\")]),e._v(\"对外映射端口时，docker实际是在iptables中做了\"),t(\"code\",[e._v(\"DNAT\")]),e._v(\"规则，实现端口转发功能。可以使用 \"),t(\"code\",[e._v(\"iptables -t nat -vnL\")]),e._v(\"查看。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"/assets/img/docker-bridge.png\",alt:\"bridge模式示意图\"}})])])}),[],!1,null,null,null);t.default=o.exports}}]);","extractedComments":[]}